// 빌드 시
buildscript {
    ext {
        springBootVersion = '2.7.8'
        managerVersion = '1.0.15.RELEASE'
        sonarqubeVersion = '3.0'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${managerVersion}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}"
    }
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    group 'org.example'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '11'
    targetCompatibility = '11'
    compileJava.options.encoding = 'UTF-8'

    jacoco {
        toolVersion = '0.8.8'
    }

    test {
        useJUnitPlatform()
        finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        reports{
            html.enabled=true
            xml.enabled=true
            csv.enabled=true
        }

        finalizedBy 'jacocoTestCoverageVerification'
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                enabled = false
                element = 'CLASS'

                // 브랜치 커버리지
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.50
                }

                // 라인 커버리지
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.50
                }

                // 빈 줄을 제외한 코드의 최대 라인수
                limit {
                    counter = 'LINE'
                    value = 'TOTALCOUNT'
                    maximum = 200
                }

                // 커버리지 체크를 제외할 클래스들
                excludes = []
            }
        }
    }

    sonarqube {
        properties {
            property "sonar.host.url", "http://localhost:9000"
//            property "sonar.login", "squ_fbebe5a7a488087a817cbf6a6c342beda6ef1885"
            property "sonar.sources", "src"
            property "sonar.language", "java"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.test.inclusions", "**/*Test.java"
            property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/**'
        }
    }

    repositories {
        mavenCentral()
    }

    // 하위 모듈에서 공통으로 사용하는 세팅 추가
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.7'
        implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.7'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.micrometer:micrometer-registry-prometheus'
    }

    ext {
        set('springCloudVersion', "2021.0.5")
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}
